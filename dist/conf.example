/* Sigyn - A reasonably sane IRC bot.
 * 
 * This configuration file supports 2 types
 * of comments:
 *
 * - All text after a '#' on a line is ignored, as in shell scripting
 * - A block of text like this one is ignored, as in C
 */

/* The sigyn structure is required for the bot
 * to start correctly. The following values are
 *
 * nick - Nickname the bot will take in IRC
 * desc - Gecos description for the bot on IRC
 * ident - The ident the bot will use on IRC
 * modes - The modes the bot will (un)set upon connecting
 * fantasy - Fantasy character to recognise commands for
 */
sigyn {
  nick = "sigyn";
  desc = "Sigyn IRC Bot";
  ident = "sigyn";
  modes = "+i";
  
  fantasy = "!";
};

/* The uplink structure is required for the bot to
 * connect to an IRC network and be any bit useful.
 *
 * server - IRC server to connect to
 * port - Port used to connect to the IRC server
 * vhost - hostname to bind to
 * ssl - 0 or 1 stating whether to use SSL or not,
 * 	1 being true, 0 being false
 */
uplink {
  server = "irc.thinstack.net";
  /* vhost = "0.0.0.0"; */
  port = 6667;
  ssl = 0;
};

/* The admin user is required enorder to use IRC
 * commands that the bot offers as apart of it's
 * modules, not setting an admin will result in the
 * bot rejecting your requests for specific commands
 * which require administrative privileges.
 *
 * admin - An IRC nickname of the bot administrator
 */
admin = "adminuser";

/* The following blocks below are optional modules
 * which can be loaded and unloaded. All modules
 * have a small description on what they do.
 * 
 * Any module that is in core/ will be uncommented
 * in the config, any module in admin/ will require
 * that the user be a bot administrator to use that
 * command.
 * Any module that is in channel/ is used for channel
 * management (such as bans/auto-voice).
 * Any module in scripting allows for other scripts
 * to be loaded via scripting engines and work as
 * modules.
 * Any module in contrib/ was a module that was
 * contributed to the sigyn development and the
 * developers felt it was a good module.
 * Any module in example/ can be used to learn how
 * to make sigyn modules.
 */

/* Keep the bot connected to the server */
loadmodule "core/ping";

/* General Help about commands */
loadmodule "core/help";

/* Handles nickname collisions when connecting to IRC */
loadmodule "core/registration";

/* Handles CTCP replies for other modules */
loadmodule "core/ctcp";

/* Handles CTCP TIME, CTCP VERSION, CTCP PING.
 * Requires that core/ctcp be loaded
 */
loadmodule "core/ctcpbasics";

/* Returns information on the channel */
#loadmodule "channel/info";

/* Auto joins a channel on startup
 *
 * autojoin - Channel to join
 * joinlogchan - Channel to join for logging
 */
#loadmodule "channel/autojoin";
#autojoin = "#Sigyn";
#joinlogchan = "#SigynAdmins";

/* Executes a terminal command */
#loadmodule "admin/exec";

/* Joins or parts a channel */
#loadmodule "admin/join";

/* Handles module unloading/loading/reloading */
#loadmodule "admin/modload";

/* Send raw lines out the socket to the server */
#loadmodule "admin/raw";

/* Allows Sigyn to load python scripts as modules */
#loadmodule "scripting/python";

/* alyx needs to document this module */
#loadmodule "contrib/voicebot";

/* Example module which resolves a DNS hostname to ip */
#loadmodule "example/dns";

/* Example module that says hello! */
#loadmodule "example/hello";
